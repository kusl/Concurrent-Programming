Group 11  - Aaron Karper (08-915-894), Joel Krebs (09-112-996)

# Serie10 - Petri Net

## Exercise 1

1. **How can nets model concurrency and synchronization?**  
The tokens in places can represent resources or jobs and together with the transitions you can model when jobs are performed, which conditions must be met to synchronize or overall flow of control.

2. **What is the reachability set of a net? How can you compute this set?**  
A marking is a defined state of the net, which means a certain combination of tokens on places. The reachability set is the collection of all sets reachable for the initial state / marking.  
??? Calucation ???

3. **What kinds of Petri nets can be modeled by finite state processes?**  
???

4. **What are some simple conditions for guaranteeing that a net is bounded?**  
When the reachability set is finite.

5. **What could you add to Petri nets to make them Turing-complete?**  
You would need some kind of way to tell a transition that it might only fire, when a place is *empty* instead of having a token. This can be done e.g. by a special arrow.

## Exercise 2

**Provide the definition of the petri net in figure 1 and 2.**

### Figure 1

    P = { a, b }
    T = { x }
    I(x) = { a }
    O(x) = { b }
    m = { a, a }

### Figure 2

    P = { a, b, c, d }
    T = { x, y }
    I(x) = { a, b } I(y) = { c, d }
    O(x) = { b, c, d } O(y) = { b }
    m = { a, a }

## Exercise 3

**Is the Petri net in Figure 3 bounded? Safe? Conservative? Are all the transitions live?**

    Reachability set = { { a, b, d, e }, { a, c, e }, { c, f }, { b, d, f } }

Therfore the net is 4-bounded, not safe and not conservative. With the inital marking, transitions `v` and `y` are deadlocked while `u` and `x` are live.

The net can reach a total dead lock, e.g. when first `u` and then `x` fires.

## Exercise 4

See attached pdf.